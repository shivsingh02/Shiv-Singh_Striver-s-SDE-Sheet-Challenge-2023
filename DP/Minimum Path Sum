#include <bits/stdc++.h> 

int mincost(int i, int j, vector<vector<int>> &prevmincost, vector<vector<int>> &grid){
    if(i<0||j<0) return INT_MAX;
    if(i==0&&j==0) return prevmincost[i][j]=grid[i][j];
    if(prevmincost[i][j]!=-1) return prevmincost[i][j];
    int up=mincost(i-1,j,prevmincost,grid);
    int left=mincost(i,j-1,prevmincost,grid);

    return prevmincost[i][j]=grid[i][j]+ min(up,left);
}

int minSumPath(vector<vector<int>> &grid) {
    int n=grid.size();
    int m=grid[0].size();
    vector<vector<int>> prevmincost(n,vector<int> (m,-1));
    return mincost(n-1,m-1,prevmincost,grid);
}
