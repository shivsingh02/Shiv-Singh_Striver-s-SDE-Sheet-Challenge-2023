#include <bits/stdc++.h> 
/*
    Following is Binary Tree Node structure:
    class TreeNode
    {
    public:
        int data;
        TreeNode *left, *right;
        TreeNode() : data(0), left(NULL), right(NULL) {}
        TreeNode(int x) : data(x), left(NULL), right(NULL) {}
        TreeNode(int x, TreeNode *left, TreeNode *right) : data(x), left(left), right(right) {}
    };
*/
vector<int> getPostOrderTraversal(TreeNode *root)
{
    vector<int> postorder;
    stack<TreeNode*> s1;
    stack<TreeNode*> s2;
    if(root==NULL) return postorder;
    s1.push(root);
    while(!s1.empty()){
        TreeNode *node=s1.top();
        s2.push(node);
        s1.pop();
        if(node->left!=NULL) s1.push(node->left);
        if(node->right!=NULL)  s1.push(node->right);
    }
    while(!s2.empty()){
        TreeNode *node=s2.top();
        postorder.push_back(node->data);
        s2.pop();
    }
    return postorder;
}
