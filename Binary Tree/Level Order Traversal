#include <bits/stdc++.h> 
/************************************************************

    Following is the BinaryTreeNode class structure

    template <typename T>
    class BinaryTreeNode {
       public:
        T val;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T val) {
            this->val = val;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/
void levelFill(vector<int> &ans, deque<BinaryTreeNode<int> *> &q){
    if(q.empty()==true) return;
    queue<BinaryTreeNode<int> *> s;
    while(q.empty()!=true){
        BinaryTreeNode<int> *node=q.front();
        s.push(q.front());
        ans.push_back(node->val);
        q.pop_front();
    }
    while(s.empty()!=true){
        BinaryTreeNode<int> *node=s.front();
        if(node->left!=NULL) q.push_back(node->left);
        if(node->right!=NULL) q.push_back(node->right);
        s.pop();
    }
    levelFill(ans,q);
}
vector<int> getLevelOrder(BinaryTreeNode<int> *root)
{
    deque<BinaryTreeNode<int> *> q;
    if(root!=NULL) q.push_back(root);
    vector<int> ans;
    levelFill(ans,q);
    return ans;
}
