/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

Node *rotate(Node *head, int k) {
     Node* start=head;
     int n=0;
     Node *temp=head;
     while(temp){
          n++;
          temp=temp->next;
     }
     k=k%n;
     if(k==0) return head;
     int x=n-k-1;
     while(x--){
          head=head->next;
     }
     Node* prev=head;
     head=head->next;
     Node*ans=head;
     temp=ans;
     prev->next=NULL;
     while(temp->next){
          temp=temp->next;
     }
     temp->next=start;
     return ans;
}
